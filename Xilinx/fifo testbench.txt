library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
use IEEE.NUMERIC_STD.ALL;

ENTITY FIFO_tb IS
END FIFO_tb;
 
ARCHITECTURE behavior OF FIFO_tb IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT FIFO
    PORT(
         data_in : IN  std_logic_vector(7 downto 0);
         rst : IN  std_logic;
         clk : IN  std_logic;
         wr_en : IN  std_logic;
			addr : in  STD_LOGIC_VECTOR (1 downto 0);
         data_out : OUT  std_logic_vector(7 downto 0);
         empty : INOUT  std_logic;
         full : INOUT  std_logic
        );
    END COMPONENT;
    

   --Inputs
   signal data_in : std_logic_vector(7 downto 0) := X"FF";
   signal rst : std_logic := '1';
   signal clk : std_logic := '0';
   signal wr_en : std_logic := '0';
	signal addr :  STD_LOGIC_VECTOR (1 downto 0):="11";

	--BiDirs
   signal empty : std_logic;
   signal full : std_logic;

 	--Outputs
   signal data_out : std_logic_vector(7 downto 0);

   -- Clock period definitions
   constant clk_period : time := 10 ns;
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: FIFO PORT MAP (
          data_in => data_in,
          rst => rst,
          clk => clk,
          wr_en => wr_en,
			 addr => addr,
          data_out => data_out,
          empty => empty,
          full => full
        );

   -- Clock process definitions
   clk_process :process
   begin
		clk <= '0';
		wait for clk_period/2;
		clk <= '1';
		wait for clk_period/2;
   end process;
 

   -- Stimulus process
   stim_procDIN: process
   begin		
      data_in<= data_in +1;
		wait for 10 ns;
   end process;
	
	stim_procRST: process
   begin
		rst<= '1';
		wait for 40 ns;
      rst<= '0';
		wait for 160 ns;
	end process;
	
	stim_procWREN: process
   begin		
		wait for 40 ns;
		wr_en<=NOT(wr_en);
   end process;
	
	stim_procADDR: process
   begin		
		wait for 10 ns;
		addr<= addr+1;
   end process;
END;
